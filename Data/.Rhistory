## make data
set=cdata$data
## hist of pred
set$preds=predict(pf,type='response')
set2=set[which(set$preds>0.5),]
## gpf
set.seed(2)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=5)
pf$models
pf$models[[1]]
pf$models[[1]]$family$family
sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|z|)']
)
pvals <- sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|z|)'])
pvals
round(pvals,3)
D <- length(pf$tree$tip.label)
D
pvals<=(FWER/(2*D-3 - 2*(0:(pf$nfactors-1))))
FWER=0.05
pvals<=(FWER/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.05/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.1/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.2/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.1/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.15/(2*D-3 - 2*(0:(pf$nfactors-1))))
pvals<=(0.2/(2*D-3 - 2*(0:(pf$nfactors-1))))
0.2/(2*D-3 - 2*(0:(pf$nfactors-1)))
pvals
roun(pvals,5)
round(pvals,5)
0.2/(2*D-3 - 2*(0:(pf$nfactors-1)))
round(pvals,5)
0.1/(2*D-3 - 2*(0:(pf$nfactors-1)))
round(0.1/(2*D-3 - 2*(0:(pf$nfactors-1))),5)
round(0.1/(2*D-3 - 2*(0:(pf$nfactors-1))),4)
round(0.1/(2*D-3 - 2*(0:(pf$nfactors-1))),3)
fit
## Holm rejection procedure
HolmProcedure <- function(pf,FWER=0.05){
if (pf$models[[1]]$family$family%in%c('gaussian',"Gamma","quasipoisson")){
pvals <- sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|t|)'])
} else {
pvals <- sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|z|)'])
}
D <- length(pf$tree$tip.label)
## this is the line for Holm's sequentially rejective cutoff
keepers <- pvals<=(FWER/(2*D-3 - 2*(0:(pf$nfactors-1))))
if (!all(keepers)){
nfactors <- min(which(!keepers))-1
} else {
nfactors <- pf$nfactors
}
return(nfactors)
}
keep=HolmProcedure(pf,FWER=0.2)
pf.tree(pf,factors=1,size=0.1,layout="circular")$ggplot
pf.tree(pf,factors=1:keep,size=0.1,layout="circular")$ggplot
## set key
setkey(pf$Data,'Species')
## summarize
pf.taxa(pf,taxonomy,factor=1)$group1
## make data
set=cdata$data
## hist of pred
set$preds=predict(pf,type='response')
set2=set[which(set$preds>0.5),]
View(set2)
## refit with correct number
pf2=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=keep)
## set key
setkey(pf2$Data,'Species')
## summarize
pf.taxa(pf2,taxonomy,factor=1)$group1
## make data
set=cdata$data
## hist of pred
set$preds=predict(pf2,type='response')
set2=set[which(set$preds>0.5),]
set2=set[which(set$preds>0.4),]
set2=set[which(set$preds>0.1),]
set2=set[which(set$preds>0.2),]
hist(set$preds)
set2=set[which(set$preds>0.11),]
View(set2)
## gpf
set.seed(2)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=10)
keep=HolmProcedure(pf,FWER=0.2)
pf.tree(pf,factors=1:keep,size=0.1,layout="circular")$ggplot
## make data
set=cdata$data
## hist of pred
set$preds=predict(pf,type='response')
set2=set[which(set$preds>0.11),]
set2=set[which(set$preds>0.9),]
View(set2)
## gpf
set.seed(2)
## gpf
set.seed(10)
## gpf
set.seed(10)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,nfactors=5)
cdata$data$betacov
set=cdata$data
View(set)
## gpf
set.seed(1)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=5,weights=cdata$data$Count)
keep=HolmProcedure(pf,FWER=0.2)
## gpf
set.seed(1)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=5)
keep=HolmProcedure(pf,FWER=0.2)
pf.tree(pf,factors=1:keep,size=0.1,layout="circular")$ggplot
keep=HolmProcedure(pf)
fit=summary(pf$models[[1]])
fit
anova(fit)
x=pf$models[[1]]
anova(x)
anova(x,test='LRT')
Anova(x)
summary(x)$coefficients['phyloS','Pr(>|z|)']
## clean environment & plots
rm(list=ls())
graphics.off()
## packages
library(ape)
library(phylofactor)
library(tidyverse)
library(data.table)
library(ggtree)
## load phylogeny
setwd("~/Dropbox (Personal)/GBatNet")
tree=readRDS('STFull.rds')
## clean environment & plots
rm(list=ls())
graphics.off()
## packages
library(ape)
library(phylofactor)
library(tidyverse)
library(data.table)
library(ggtree)
## load phylogeny
setwd("~/Dropbox (Personal)/GBatNet")
data=readRDS('GregPredictions.rds')
## load phylogeny
tree=readRDS('STFull.rds')
## fix names
data$unique_names=data$Sp
## test match
n1=data$unique_names
n2=tree$tip.label
## trim
table(n1%in%n2)
## trim tree
btree=keep.tip(tree,n1)
## merge into phylogeny order
bdata=data[match(btree$tip.label,data$unique_names),]
## clean environment & plots
rm(list=ls())
graphics.off()
## packages
library(ape)
library(phylofactor)
library(tidyverse)
library(data.table)
library(ggtree)
## load phylogeny
setwd("~/Dropbox (Personal)/GBatNet")
data=readRDS('GregPredictions.rds')
## load phylogeny
tree=readRDS('STFull.rds')
## fix names
data$unique_name=data$Sp
## trim tree
btree=keep.tip(tree,n1)
## trim tree
btree=keep.tip(tree,data$unique_name)
## merge into phylogeny order
bdata=data[match(btree$tip.label,data$unique_name),]
## merge with caper
library(caper)
cdata=comparative.data(phy=btree,data=bdata,names.col=unique_name,vcv=T,na.omit=F,warn.dropped=T)
## add unique
cdata$data$unique_name=rownames(cdata$data)
cdata$data$Species=rownames(cdata$data)
## make taxonomy
cdata$data$taxonomy=with(cdata$data,paste(hOrder,hFamily,hGenus,unique_name,sep='; '))
## trim to just bats
bats=cdata[which(cdata$data$hOrder=='Chiroptera'),]
## test as data frame
bdata=bats$data
## tree
tree=bats$phy
## clean
rm(btree,cdata,data,n1,n2)
## load in CoV data
setwd("~/Dropbox (Personal)/GBatNet/Data")
library(tidyverse)
read_csv('BatCoV-assoc.csv') -> batcov
View(batcov)
table(batcov$origin,batcov$virus_genus)
## just beta
betabat=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
batcov$sarbecov[is.na(batcov$sarbecov) & !(batcov$virus_genus == 'Betacoronavirus')] <- 0
batcov$sarbecov[is.na(batcov$sarbecov) & (batcov$virus_genus == 'Betacoronavirus')] <- -1
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
shorthand <- function(x) {
if(sum(x==1)>0) {1} else {
if(sum(x==-1)>0) {-1} else {
0
}
}
}
batcov %>% group_by(host_species) %>%
summarize(betacov = max(betacov),
sarbecov = shorthand(sarbecov)) -> batcov
read_csv('Han-BatTraits.csv') -> traits
traits %>% mutate(host_species = paste(MSW05_Genus, MSW05_Species)) %>%
mutate() -> traits
right_join(batcov, traits) %>%
mutate(betacov = replace_na(betacov, 0),
sarbecov = replace_na(sarbecov, 0)) %>%
mutate(sarbecov = na_if(sarbecov, -1)) -> batdf
batdf <- data.frame(batdf)
## clean batdf
batdf2=batdf[c('host_species','betacov','Pan')]
## match with bdata
batdf2$unique_name=batdf2$Pan
batdf2$Pan=NULL
test=merge(bdata,batdf2,by='unique_name',all.x=T)
table(test$betacov)
table(is.na(test$betacov))
## data
data=test
## merge into phylogeny order
bdata=data[match(tree$tip.label,data$unique_name),]
## merge with caper
library(caper)
cdata=comparative.data(phy=tree,data=bdata,names.col=unique_name,vcv=T,na.omit=F,warn.dropped=T)
## add unique
cdata$data$unique_name=rownames(cdata$data)
cdata$data$Species=rownames(cdata$data)
## Holm rejection procedure
HolmProcedure <- function(pf,FWER=0.05){
if (pf$models[[1]]$family$family%in%c('gaussian',"Gamma","quasipoisson")){
pvals <- sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|t|)'])
} else {
pvals <- sapply(pf$models,FUN=function(fit) summary(fit)$coefficients['phyloS','Pr(>|z|)'])
}
D <- length(pf$tree$tip.label)
## this is the line for Holm's sequentially rejective cutoff
keepers <- pvals<=(FWER/(2*D-3 - 2*(0:(pf$nfactors-1))))
if (!all(keepers)){
nfactors <- min(which(!keepers))-1
} else {
nfactors <- pf$nfactors
}
return(nfactors)
}
## get species in a clade
cladeget=function(pf,factor){
spp=pf$tree$tip.label[pf$groups[[factor]][[1]]]
return(spp)
}
## set taxonomy
taxonomy=data.frame(cdata$data$taxonomy)
names(taxonomy)="taxonomy"
taxonomy$Species=rownames(cdata$data)
taxonomy=taxonomy[c("Species","taxonomy")]
taxonomy$taxonomy=as.character(taxonomy$taxonomy)
## gpf
set.seed(1)
pf=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=5)
keep=HolmProcedure(pf)
pf.tree(pf,factors=1:5,size=0.1,layout="circular")$ggplot
pf2=pf
## summarize
pf.taxa(pf2,taxonomy,factor=1)$group1
pf.taxa(pf2,taxonomy,factor=2)$group1
pf.taxa(pf2,taxonomy,factor=3)$group1
pf.taxa(pf2,taxonomy,factor=4)$group1
pf.taxa(pf2,taxonomy,factor=5)$group1
## make data
set=cdata$data
## hist of pred
set$preds=predict(pf2,type='response')
set2=set[which(set$preds>0.9),]
View(set2)
keep=HolmProcedure(pf,FWER=0.1)
pf.tree(pf,factors=1:keep,size=0.1,layout="circular")$ggplot
keep=HolmProcedure(pf,FWER=0.2)
keep=HolmProcedure(pf,FWER=0.1)
pf.tree(pf,factors=1:keep,size=0.1,layout="circular")$ggplot
## refit with correct number
pf2=gpf(Data=cdata$data,tree=cdata$phy,
frmla.phylo=betacov~phylo,
family=binomial,algorithm='phylo',nfactors=keep)
## set key
setkey(pf2$Data,'Species')
## summarize
pf.taxa(pf2,taxonomy,factor=1)$group1
## make data
set=cdata$data
## hist of pred
set$preds=predict(pf2,type='response')
set2=set[which(set$preds>0.9),]
hist(set2$preds)
hist(set$preds)
## clean environment & plots
gc()
rm(list=ls())
graphics.off()
## packages
library(ggplot2)
library(car)
library(visreg)
library(lme4)
library(sciplot)
library(plyr)
## load in 2014 THg data
library(readxl)
setwd("~/Dropbox (Personal)/PROJECTS/Belize/Hg project/comparative")
data=read_excel("neotropical Hg corrected.xlsx",sheet=1)
## check names
names(data)
data=data[c("ID on Vial","Species","Alt Species","sex",
"Hair Hg (Âµg/kg)","Diet","Diet Details","Estimated Concentration")]
## fix names
names(data)
names(data)=c("ID","species","altspecies","sex","thg_ugkg","diet","diet_details","thg_ugkg_corr")
## load in bat location
location=read_excel("Bat Hg location.xlsx",sheet=1)
## just ID and site
location=location[c("ID Number (on vial)","site")]
## change names and merge
names(location)=c("ID","site")
location=location[!is.na(location$site),]
data=merge(data,location,by="ID",all=T)
rm(location)
## mark if need to adjust
data$bdl=ifelse(is.na(data$thg_ugkg_corr)==F,"below","above")
table(data$bdl)
## clean environment & plots
rm(list=ls())
graphics.off()
## packages
library(ape)
library(phylofactor)
library(tidyverse)
library(data.table)
library(ggtree)
## load phylogeny
setwd("~/Dropbox (Personal)/GBatNet")
data=readRDS('GregPredictions.rds')
## load phylogeny
tree=readRDS('STFull.rds')
## fix names
data$unique_name=data$Sp
## trim tree
btree=keep.tip(tree,data$unique_name)
## merge into phylogeny order
bdata=data[match(btree$tip.label,data$unique_name),]
## merge with caper
library(caper)
cdata=comparative.data(phy=btree,data=bdata,names.col=unique_name,vcv=T,na.omit=F,warn.dropped=T)
## add unique
cdata$data$unique_name=rownames(cdata$data)
cdata$data$Species=rownames(cdata$data)
## make taxonomy
cdata$data$taxonomy=with(cdata$data,paste(hOrder,hFamily,hGenus,unique_name,sep='; '))
## trim to just bats
bats=cdata[which(cdata$data$hOrder=='Chiroptera'),]
## test as data frame
bdata=bats$data
## tree
tree=bats$phy
## clean
rm(btree,cdata,data)
## load in CoV data
setwd("~/Dropbox (Personal)/GBatNet/Data")
library(tidyverse)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
read_csv('BatCoV-assoc.csv') -> batcov
View(batcov)
library(tidyverse)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
read_csv('BatCoV-assoc.csv') -> batcov
## just beta
betabat=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
View(batcov)
table(batcov$sarbecov)
batcov$sarbecov[is.na(batcov$sarbecov) & !(batcov$virus_genus == 'Betacoronavirus')] <- 0
batcov$sarbecov[is.na(batcov$sarbecov) & (batcov$virus_genus == 'Betacoronavirus')] <- -1
names(batcov)
batcov %>% select(host_species, betacov, sarbecov) %>% unique
library(dplyr)
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
library(dplyr)
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
shorthand <- function(x) {
if(sum(x==1)>0) {1} else {
if(sum(x==-1)>0) {-1} else {
0
}
}
}
batcov %>% group_by(host_species) %>%
summarize(betacov = max(betacov),
sarbecov = shorthand(sarbecov)) -> batcov
## load in CoV data
setwd("~/Dropbox (Personal)/GBatNet/Data")
library(tidyverse)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
read_csv('BatCoV-assoc.csv') -> batcov
## just beta
betabat=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
batcov$sarbecov[is.na(batcov$sarbecov) & !(batcov$virus_genus == 'Betacoronavirus')] <- 0
batcov$sarbecov[is.na(batcov$sarbecov) & (batcov$virus_genus == 'Betacoronavirus')] <- -1
library(dplyr)
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
shorthand <- function(x) {
if(sum(x==1)>0) {1} else {
if(sum(x==-1)>0) {-1} else {
0
}
}
}
batcov %>% group_by(host_species) %>%
summarize(betacov = max(betacov),
sarbecov = shorthand(sarbecov)) -> batcov
## load in CoV data
setwd("~/Dropbox (Personal)/GBatNet/Data")
library(tidyverse)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
read_csv('BatCoV-assoc.csv') -> batcov
## just beta
betabat=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
batcov$sarbecov[is.na(batcov$sarbecov) & !(batcov$virus_genus == 'Betacoronavirus')] <- 0
batcov$sarbecov[is.na(batcov$sarbecov) & (batcov$virus_genus == 'Betacoronavirus')] <- -1
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
shorthand <- function(x) {
if(sum(x==1)>0) {1} else {
if(sum(x==-1)>0) {-1} else {
0
}
}
}
batcov %>% group_by(host_species) %>%
summarize(betacov = max(betacov),
sarbecov = shorthand(sarbecov)) -> batcov
View(batcov)
## load in CoV data
setwd("~/Dropbox (Personal)/GBatNet/Data")
library(tidyverse)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
read_csv('BatCoV-assoc.csv') -> batcov
## just beta
batcov=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
View(batcov)
read_csv('BatCoV-assoc.csv') %>% filter(origin == 'Anthony') -> batcov
## just beta
batcov=batcov[which(batcov$virus_genus=='Betacoronavirus'),]
## Colin code
batcov %>% mutate(betacov = as.numeric(virus_genus == 'Betacoronavirus'),
sarbecov = as.numeric(virus_subgenus == 'Sarbecovirus')) -> batcov
batcov$sarbecov[is.na(batcov$sarbecov) & !(batcov$virus_genus == 'Betacoronavirus')] <- 0
batcov$sarbecov[is.na(batcov$sarbecov) & (batcov$virus_genus == 'Betacoronavirus')] <- -1
batcov %>% select(host_species, betacov, sarbecov) %>% unique -> batcov
shorthand <- function(x) {
if(sum(x==1)>0) {1} else {
if(sum(x==-1)>0) {-1} else {
0
}
}
}
batcov %>% group_by(host_species) %>%
summarize(betacov = max(betacov),
sarbecov = shorthand(sarbecov)) -> batcov
